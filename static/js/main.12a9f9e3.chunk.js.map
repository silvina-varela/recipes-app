{"version":3,"sources":["components/Create/validations.js","components/Landing/Landing.jsx","actions/constants.js","actions/index.js","components/Pagination/Pagination.jsx","components/NavBar/NavBar.jsx","components/RecipeCard/RecipeCard.jsx","components/Recipes/Recipes.jsx","components/Loader/Loader.jsx","components/Sorter/Sorter.jsx","components/Home/Home.jsx","components/Create/Create.jsx","components/Error404/Error404.jsx","components/DetailCard/DetailCard.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["module","exports","validate","data","error","title","summary","healthScore","readyInMinutes","image","instructions","length","test","toString","includes","Number","isNaN","i","step","console","log","Landing","className","to","GET_RECIPES","GET_DETAIL","RESET_DETAIL","GET_DIETS","FILTER_DIET","SORT_RECIPES","SEARCH","CREATE_RECIPE","RESET","getRecipes","dispatch","axios","get","then","recipes","type","payload","catch","tupe","getDiets","diets","search","message","sortRecipes","sort","Pagination","pageLength","pagination","currentPage","pageNum","Math","ceil","push","onClick","map","num","NavBar","handleGoHome","useDispatch","useState","searchTerm","setSearchTerm","menuOpen","setMenuOpen","classes","handleNavClass","placeholder","value","onChange","e","preventDefault","target","onKeyUp","key","RecipeCard","dishTypes","dietString","join","dishes","src","alt","Recipes","currentRecipes","r","id","Loader","Sorter","allDiets","useSelector","state","sorter","setSorter","disabled","selected","diet","d","name","Home","setCurrentPage","indexOfLast","indexOfFirst","slice","useEffect","Create","history","useHistory","input","setInput","setError","handleInputChange","handleNumberInput","parseInt","checkCount","setCheckCount","isChecked","setIsChecked","handleCheckBox","checked","inputInst","setInputInst","onSubmit","post","recipe","maxLength","maxlength","index","filter","dish","min","max","instruction","number","pop","handleInstChange","form","Object","values","Error404","DetailCard","props","match","params","detail","getDetail","selectedRecipe","keys","for","dangerouslySetInnerHTML","__html","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","allRecipes","rootReducer","action","a","b","toLowerCase","filteredByDiet","filtered","vegetarian","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12a9f9e3.chunk.js","sourcesContent":["/* eslint-disable */\r\n// el comentario de arriba evita que me salga un warning en la consola por todos los escaped characters que hay en las reg exps.\r\nconst validate = (data) => {\r\n  let error = {}\r\n  let { title, summary, healthScore, readyInMinutes, image, instructions } = data\r\n\r\n/* TITLE */\r\n  let onlyLetters = /^[A-zÀ-ÿ'&\\s,]+$/ig // letras de A-Z, con acentos (´ ` ^), comas, espacios y ñ, case insensitive (i), y también apóstrofe (')\r\n  if(title?.length){\r\n    if(!onlyLetters.test(title))  error.title = 'Your title can\\'t have any special characters or numbers'\r\n    else if(title?.length < 5 && title?.length <= 60) error.title = 'Your title must have between 5 and 60 characters'\r\n  }\r\n\r\n/* SUMMARY */\r\n  let mostCharacters = /^[A-zÀ-ÿ'\\(\\)<>%\"¡!¿\\?,;:&\\$\\-\\d\\.\\s]+$/ig  // Letras, números, puntuación y algunos caracteres extra\r\n  if(summary?.length){\r\n    if(!mostCharacters.test(summary)) error.summary = 'Only letters, numbers and some special characters are accepted'\r\n    else if(summary?.length < 10  && summary?.length <= 1500) error.summary = 'Your summary must have between 10 and 1500 characters'\r\n  } \r\n   \r\n/* HEALTH SCORE */\r\n  // No necesito validar si son números porque el input no permite escribir otra cosa\r\n  // Quiero que 0 sea aceptado como valor (como indicación de que el usuario no quiere completar ese campo)\r\n  // por más que html no permite hacer submit cuando está fuera del range, lo defino para que salga el mensaje\r\n  if(healthScore < 0 || healthScore > 100) error.healthScore = 'The Health Score must be a number between 0 and 100' \r\n  if(healthScore.toString().length > 1 && healthScore.toString()[0] === '0') error.healthScore = 'The Health Score can\\'t start with zero'\r\n  if(healthScore.toString().includes('.') || healthScore.toString().includes('e')) error.healthScore = 'The Health Score must be an integer'\r\n  if(Number.isNaN(healthScore)) error.healthScore = 'The Health Score must be a number'\r\n\r\n/* READY IN MINUTES */\r\n  // Establezco que el máximo sea 4 horas \r\n  if(readyInMinutes < 0 || readyInMinutes > 240) error.readyInMinutes = 'The cooking time must be a number between 0 and 240'\r\n  if(readyInMinutes.toString().length > 1 && readyInMinutes.toString()[0] === '0') error.readyInMinutes = 'The cooking time can\\'t start with zero'\r\n  if(readyInMinutes.toString().includes('.') || readyInMinutes.toString().includes('e')) error.readyInMinutes = 'The cooking time must be an integer'\r\n  if(Number.isNaN(readyInMinutes)) error.readyInMinutes = 'The cooking time must be a number'\r\n\r\n/* IMAGE */\r\n  let isLink = /[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/ig \r\n  // html tiene una validación al ponerle type url, pero no chequea que no queden espacios entre letras\r\n  // en el back configuré para que borre espacios al principio y al final del string como medida extra\r\n  if(image?.length) if(!isLink.test(image)) error.image = 'Please write a valid link'\r\n   \r\n/* INSTRUCTIONS y STEPS */\r\nif(instructions?.length){\r\n  for(let i = 0; i < instructions.length; i++){\r\n    let testInstructions = /^[A-zÀ-ÿ'\\(\\)<>%\"¡!¿\\?,;:+\\*&\\$\\-\\d\\.\\s]+$/ig\r\n    let step = instructions[i][\"step\"]\r\n    console.log('step: '+step)\r\n    if(i !== 0 && !instructions[i-1][\"step\"]) error.instructions = 'You need to fill in the previous instruction'\r\n    else{\r\n      if(!testInstructions.test(step)) error.instructions = 'Only letters, numbers and some special characters are accepted'\r\n      else if(step.length > 150) error.step = 'Each step should have less than 150 characters'\r\n    }\r\n  }}\r\n  \r\nreturn error\r\n}\r\n\r\n\r\n\r\nmodule.exports = {validate}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./landing.css\";\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <div className='landing-bg'>\r\n            <div className='container'>\r\n            <h1 className='title'>the meal finder</h1>\r\n            <h3 className='info-text'>Search through thousands of recipes and find your next great meal</h3>\r\n            <Link to='/home'>\r\n                <button className='explore-btn'>Explore</button>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Landing;","export const GET_RECIPES = 'GET_RECIPES';\r\nexport const GET_DETAIL = 'GET_DETAIL';\r\nexport const RESET_DETAIL = 'RESET_DETAIL'\r\nexport const GET_DIETS = 'GET_DIETS';\r\nexport const FILTER_DIET = 'FILTER_DIET';\r\nexport const SORT_RECIPES = 'SORT_RECIPES';\r\nexport const SEARCH = 'SEARCH';\r\nexport const CREATE_RECIPE = 'CREATE_RECIPE';\r\nexport const RESET = 'RESET'","import { GET_RECIPES, SEARCH, FILTER_DIET, GET_DIETS, SORT_RECIPES, GET_DETAIL, RESET_DETAIL, CREATE_RECIPE, RESET } from './constants.js'\r\n\r\nimport axios from 'axios';\r\n\r\nexport const getRecipes = () => {\r\n    return async (dispatch) => {\r\n        return await axios.get('https://food-app-4ifl.onrender.com/recipes') \r\n        .then(recipes => dispatch({type: GET_RECIPES, payload: recipes.data}))\r\n        .catch(error => dispatch({tupe: GET_RECIPES, payload: error}))\r\n    }\r\n}\r\n\r\nexport const getDiets = () => {\r\n    return async (dispatch) => {\r\n        return await axios.get('https://food-app-4ifl.onrender.com/diets')\r\n        .then(diets => dispatch({type: GET_DIETS, payload: diets.data}))\r\n    }\r\n} \r\n\r\nexport const search = (search) => {\r\n    return async (dispatch) => {\r\n        return await axios.get(`https://food-app-4ifl.onrender.com/recipes?title=${search}`)\r\n            .then(recipes => dispatch({type: SEARCH, payload: recipes.data}))\r\n            .catch(error => dispatch({type: SEARCH, payload: error.message})) // error.message es 'Request failed...' (string)\r\n    }\r\n}\r\n\r\nexport const sortRecipes = (sort) => {\r\n    return async dispatch => {\r\n        return dispatch({type: SORT_RECIPES, payload: sort})\r\n    }\r\n}\r\n\r\nexport const filterDiet = (diet) => {\r\n    return async dispatch => {\r\n        return dispatch({type: FILTER_DIET, payload: diet})\r\n    }\r\n}\r\n\r\nexport const getDetail = (id) => {\r\n    return async dispatch => {\r\n        return await axios.get(`https://food-app-4ifl.onrender.com/recipes/${id}`)\r\n            .then(detail => dispatch({type: GET_DETAIL, payload: detail.data}))\r\n            .catch(error => dispatch({type: GET_DETAIL, payload: error.message}))\r\n    } \r\n}\r\n\r\nexport const resetDetail = (payload) => {\r\n    return async dispatch => {\r\n        return dispatch({type: RESET_DETAIL, payload})\r\n    } \r\n}\r\n\r\nexport const reset = (payload) => {\r\n    return async dispatch => {\r\n        return dispatch({type: RESET, payload})\r\n    } \r\n}\r\n\r\n\r\nexport const create = (payload) => {\r\n    return async dispatch => {\r\n        return await axios.post('https://food-app-4ifl.onrender.com/create', payload)\r\n            .then(recipe => dispatch({type: CREATE_RECIPE, payload: recipe.data}))\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ pageLength, recipes, pagination, currentPage }) => {\r\n    const pageNum = [];\r\n\r\n    // recorro para agregar al arreglo los números de página. Redondeo para arriba\r\n    for (let i = 1; i <= Math.ceil(recipes/pageLength); i++){\r\n        pageNum.push(i);\r\n    }\r\n\r\n    return (\r\n        <nav className='pagination'>\r\n            <ul className='pagination-ul'>\r\n                {currentPage > 1 && <li onClick={() => pagination(currentPage-1)} className='pagination-num noselect'> {'<'} </li>}\r\n                \r\n                {pageNum?.map(num => (\r\n                        <li  onClick={() => pagination(num)} className={num === currentPage ? 'page-active noselect' : 'pagination-num noselect'} key={num}>\r\n                            {num}\r\n                        </li>\r\n                ))}\r\n\r\n                {currentPage < pageNum?.length && <li onClick={() => pagination(currentPage+1)}  className='pagination-num noselect'> {'>'} </li>}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { search } from '../../actions';\r\n\r\nimport './nav.css';\r\n\r\nconst NavBar = ({handleGoHome}) => {\r\n    const dispatch = useDispatch();\r\n    // Estado inicial para la búsqueda\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        setSearchTerm(e.target.value);\r\n        // dispatch(search(e.target.value)); // Si quiero que busque a medida que tipeo\r\n    }\r\n\r\n    /* Búsqueda al apretar botón */\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(search(searchTerm));       \r\n        setSearchTerm('');\r\n        setMenuOpen(false);\r\n \r\n    }\r\n\r\n    /* Búsqueda al apretar enter */\r\n    const handleEnter = e => {\r\n        e.preventDefault();\r\n        if(e.key === 'Enter'){\r\n            dispatch(search(searchTerm));\r\n            setSearchTerm('');\r\n            setMenuOpen(false);    \r\n        }\r\n    }\r\n\r\n\r\n    /* para manejar el menú responsive */\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const handleMenu = e => {\r\n        e.preventDefault();\r\n        setMenuOpen(!menuOpen);\r\n    }\r\n\r\n    const handleNavClass = () => {\r\n        let classes = 'navlinks'\r\n        if(menuOpen){\r\n            classes = 'active'\r\n        }\r\n        return classes;\r\n    }\r\n\r\n    const handleMenuIcon = () => {\r\n        if(menuOpen){\r\n           return (\r\n            <div className='menu'>\r\n                <div className='menu-x'><span className=\"material-symbols-outlined\">close</span></div>\r\n            </div>\r\n           )\r\n        }else{\r\n           return (\r\n            <div className='menu'>\r\n                    <div className='menu-plus'><span className=\"material-symbols-outlined\">close</span></div>\r\n            </div>\r\n           )\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='fixed-menu'>\r\n        <nav className='navBar'>\r\n            \r\n            <button className='web-title noselect' onClick={handleGoHome}><Link to='/home'>the meal finder</Link></button>\r\n            <div className={handleNavClass()}>\r\n                <li className='link noselect'><Link to='/create'>CREATE</Link></li>\r\n                <div className='search-box'>\r\n                    <input className='input-text' type='text' placeholder='Search' value={searchTerm} onChange={handleChange} onKeyUp={handleEnter}/>\r\n                    <button className='searchButtom noselect' type='submit' onClick={handleSubmit}><span className=\"searchButtom material-symbols-outlined\">search</span></button>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className='toggle' onClick={handleMenu}>\r\n                {handleMenuIcon()}\r\n            </div>\r\n        </nav>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport './recipeCard.css';\r\n\r\nconst RecipeCard = ({ title, image, diets, readyInMinutes, healthScore, dishTypes }) => {\r\n\r\n    // Valida la existencia de los arrays y retorna un string\r\n    const dietString = diets?.join(' + ');\r\n    const dishes = dishTypes?.join(', ');\r\n    \r\n    // Si por alguna razón la imagen llega null o con un length inválido, le asigno imágenes según el dishtype\r\n    if(typeof image === 'object' || image?.length < 7) {\r\n        // ['main course', 'breakfast', 'brunch','lunch', 'dinner', 'snack']\r\n        if(dishTypes?.includes('dessert')) image = \"https://i.postimg.cc/Pq2Y7JKK/place-Holder-dessert.jpg\";\r\n        else if(dishTypes?.includes('side dish')) image = \"https://i.postimg.cc/MTHVJwFw/place-Holder-side-Dish.jpg\";\r\n        else if (dishTypes?.includes('snack')) image = \"https://i.postimg.cc/nzW7HWyD/place-Holder-snack.jpg\";\r\n        else image = 'https://i.postimg.cc/3W5vGvJr/place-Holder-Image.jpg';\r\n    }\r\n                      \r\n    return(\r\n        <div className='card-container'>\r\n                <div className='card-info'>\r\n                       <img className='image' src={image} alt={image}/>\r\n                       \r\n                   <h2 className='recipe-title'>{title}</h2>\r\n\r\n                   {/* Diets y dishes con condicionales por si no tienen valores */}\r\n                    { dietString ? <h5 className='diets'>{dietString}</h5> : <h6 className='diets'>this recipe might be incompatible with some dietary restrictions</h6>}\r\n                    \r\n                    { dishes ? <h6 className='dishes'>Best for: {dishes}</h6> : <h6 className='dishes'>Great for all courses</h6> }\r\n                    \r\n                </div>\r\n                <div className='numeric-info'>\r\n                {/* chequea que los valores sean mayores a 0 porque pueden ser null o 0. Si el valor no existe o es cero, no se muestra nada*/}\r\n                    {(readyInMinutes > 0) ? <h6 className='health-minutes'><span className=\"health-minutes material-symbols-outlined\">timer</span> {readyInMinutes} mins.</h6> : ''}\r\n                    {(healthScore > 0) ? <h6 className='health-minutes'><span className=\"health-minutes heart material-symbols-outlined\">favorite</span> {healthScore} points</h6> : ''}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeCard;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RecipeCard from '../RecipeCard/RecipeCard';\r\nimport './recipes.css';\r\n\r\nconst Recipes = ({ currentRecipes }) => {\r\n    return (\r\n        <div className='cards'>\r\n            {\r\n                currentRecipes?.map(r => {\r\n                    return(\r\n                    <div>\r\n                        <Link to={`/home/${r.id}`} className='open' key={r.id}>\r\n                            <RecipeCard title={r.title} diets={r.diets} image={r.image} readyInMinutes={r.readyInMinutes} healthScore={r.healthScore} dishTypes={r.dishTypes}/>\r\n                        </Link>\r\n                    </div>\r\n                    )\r\n                })\r\n             }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipes;","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <div className='loader'>\r\n            <span className='load-dot'></span>\r\n            <span className='load-dot'></span>\r\n            <span className='load-dot'></span>\r\n            <span className='load-dot'></span>\r\n            <span className='load-dot'></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sortRecipes, filterDiet } from '../../actions';\r\n\r\nimport './sorter.css';\r\n\r\n\r\nconst Sorter = ({pagination}) => {\r\n    const dispatch = useDispatch();\r\n    const { allDiets } = useSelector(state => state);\r\n    const [sorter, setSorter] = useState('')\r\n  \r\n    const handleFilter = (e) =>{\r\n        dispatch(filterDiet(e.target.value));\r\n        pagination(1) \r\n    }\r\n\r\n    const handleSort = (e) => {\r\n        dispatch(sortRecipes(e.target.value));\r\n        setSorter(e.target.value)\r\n        pagination(1) \r\n    }\r\n\r\n/* Invierte la selección del sort*/\r\n    const handleArrowClick = e => {\r\n        e.preventDefault();\r\n        if(sorter === 'A-Z') {\r\n            dispatch(sortRecipes('Z-A'));\r\n            setSorter('Z-A');\r\n        }\r\n        if(sorter === 'Z-A') {\r\n            dispatch(sortRecipes('A-Z'));\r\n            setSorter('A-Z')\r\n        }\r\n        if(sorter === '+H') {\r\n            dispatch(sortRecipes('-H'));\r\n            setSorter('-H')\r\n        }\r\n        if(sorter === '-H') {\r\n            dispatch(sortRecipes('+H'))\r\n            setSorter('+H')\r\n        }\r\n       pagination(1)\r\n    }\r\n\r\nreturn(\r\n    <div className='filter-sorter'>\r\n\r\n{/* sort */}\r\n         <div className='drop-down'>\r\n            {/* Sort alfabéticamente y por health score. \r\n            Al hacer click orderna por lo más lógico: A-Z y más sano-menos sano. \r\n            Al hacer click en las flechas, el orden se invierte*/}\r\n            <div>\r\n               <button className='arrows-sort-btn' onClick={handleArrowClick}><span className=\"arrow-sort-symbol material-symbols-outlined\">swap_vert</span></button>\r\n                <select onChange={handleSort}>\r\n                    <option disabled=\"disabled\" value=\"sort\" selected=\"true\" className='filter-title noselect'>Sort recipes</option>\r\n                    <option value=\"A-Z\">Sort alphabetically</option>\r\n                    <option value=\"+H\">Sort by Health Score</option>\r\n                </select>           \r\n            </div>\r\n        </div>\r\n\r\n        <div className='drop-down'>\r\n            \r\n{/* Filter */}\r\n            <div className='filter'>\r\n            <select onChange={handleFilter}>\r\n            <option disabled=\"disabled\" selected=\"true\" className='filter-title noselect'>Filter diets</option>\r\n                    {allDiets?.map(d => {\r\n                        return(\r\n                            <option value={d.name} key={d.id}>{d.name}</option>\r\n                        )\r\n                    })}\r\n            <option value='nofilter'>no dietary restrictions</option>\r\n            </select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Sorter;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getRecipes, getDiets, reset } from '../../actions';\r\n\r\nimport Pagination from '../Pagination/Pagination';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Recipes from '../Recipes/Recipes';\r\nimport Loader from '../Loader/Loader';\r\nimport Sorter from '../Sorter/Sorter';\r\n\r\nimport './home.css';\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // traigo el array con todas las recetas\r\n    const { recipes } = useSelector(state => state);\r\n\r\n    /* Configuración de pagination */\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const pageLength = 9; // 9 recetas por página\r\n    const indexOfLast = currentPage * pageLength; // 1 * 9\r\n    const indexOfFirst = indexOfLast - pageLength; // 9 - 9\r\n\r\n    // Seteo las recetas que se muestran en cada página (9 por página)\r\n    const currentRecipes = recipes.slice(indexOfFirst, indexOfLast); // entre 0 y 9 (no inclusive)\r\n    \r\n    // Función para setear la página que se muestra\r\n    const pagination = pageNum => setCurrentPage(pageNum);\r\n\r\n    useEffect(() => { \r\n        dispatch(getRecipes()); // obtengo todas las recetas\r\n        dispatch(getDiets()); // obtengo todas las dietas\r\n        return () => dispatch(reset()); // así no quedan cargadas las anteriores cuando cambio de página\r\n    }, [dispatch]);\r\n\r\n    const handleGoHome = e => {\r\n        e.preventDefault();\r\n        dispatch(getRecipes());\r\n        pagination(1);   \r\n    }\r\n\r\n    // Si en el reducer devuelve un string, paso un mensaje de que no se encontraron recetas\r\n    if(typeof recipes === 'string') {return(\r\n        <div>\r\n            <div><NavBar handleGoHome={handleGoHome}/></div>\r\n            <div className='sorter'><Sorter pagination={pagination}/></div>\r\n            <div className='home-body not-found'>We couldn't find any recipes :(</div>\r\n        </div> \r\n    )} else return (\r\n        <div>\r\n          <div><NavBar handleGoHome={handleGoHome}/></div>  \r\n          \r\n        {/* Si no es un string y es un array vacío (o sea que todavía no se llegaron a cargar), entra acá para mostrar el loader */}\r\n        {!recipes.length ?\r\n            \r\n                (<div className='home-body'><Loader/></div>)\r\n             \r\n         \r\n        : \r\n        (<div>\r\n            <div className='sorter'><Sorter pagination={pagination}/></div>\r\n            <div><Recipes currentRecipes={currentRecipes}/></div>\r\n            <div><Pagination currentPage={currentPage} pageLength={pageLength} recipes={recipes.length} pagination={pagination}/></div>\r\n        </div>)\r\n        }\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { validate } from './validations'\r\n\r\nimport { getDiets, create } from '../../actions';\r\nimport './create.css';\r\nimport NavBar from '../NavBar/NavBar';\r\n\r\nconst Create = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); // sirve para volver a la ruta que le indico\r\n\r\n    const { allDiets } = useSelector(state => state); // traigo el array de dietas\r\n\r\n    // Defino estados iniciales para los campos a llenar. Es lo que se manda a la DB\r\n    const [input, setInput] = useState({\r\n        title: '',\r\n        summary: '',\r\n        healthScore: 0,\r\n        readyInMinutes: 0,\r\n        dishTypes: [],\r\n        image: '',\r\n        diets: [],\r\n        instructions: [], // Es un array con objetos. Cada objeto tiene una propiedad number y una propiedad step\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        dispatch(getDiets()); // traigo las dietas para pasarlas al selector\r\n    }, [dispatch])\r\n\r\n    const [error, setError] = useState({}) // para ir pasando mensajes de error\r\n\r\n    /* SUBMIT */\r\n    const handleRecipeSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(input)\r\n        dispatch(create(input))\r\n        history.push('/home')\r\n    }    \r\n\r\n/* INPUTCHANGE y MANEJO DE ERRORES */\r\n    const handleInputChange = e => {\r\n        e.preventDefault()\r\n        setInput({\r\n            ...input, \r\n            [e.target.name]: e.target.value\r\n    })\r\n        \r\n        setError(validate({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        }))    \r\n}\r\n\r\n/* Manejo de inputs numéricos */\r\n    const handleNumberInput = e => {\r\n        e.preventDefault();\r\n        setInput({\r\n            ...input, \r\n            [e.target.name]: parseInt(e.target.value) // el input permite escribir un punto después de un número pero nunca va a ser pasado por este parseInt\r\n        })\r\n    \r\n        setError(validate({\r\n        ...input,\r\n        [e.target.name]: e.target.value\r\n        })) \r\n}\r\n\r\n/* Manejo de checkbox de dish types */\r\n    const dishesArray = ['main course', 'side dish', 'breakfast', 'brunch','lunch', 'dinner', 'dessert', 'snack']\r\n    const [checkCount, setCheckCount] = useState(0)\r\n    const [isChecked, setIsChecked] = useState({\r\n        'main course': false, 'side dish': false, 'breakfast': false, 'brunch': false,'lunch': false, 'dinner': false, 'dessert': false, 'snack': false\r\n    })\r\n\r\n    const handleCheckBox = e =>{    \r\n        if(e.target.checked){\r\n            setInput({\r\n                ...input,\r\n                dishTypes: [...input.dishTypes, e.target.value]\r\n            })\r\n            setCheckCount(checkCount+1)\r\n        } else{\r\n            setCheckCount(checkCount-1)\r\n        }  \r\n    }\r\n\r\n/* Manejo de select de dietas */ \r\n    const handleDietSelect = e => {\r\n    let exists = input.diets.includes(e.target.value); // true si ya la tiene\r\n\r\n    if(!exists){ // solo quiero agregar si no la tiene\r\n        setInput({\r\n            ...input,\r\n            diets: [...input.diets, e.target.value]\r\n        })\r\n    }\r\n    e.target.value = \"select\" // limpia el select\r\n    }\r\n\r\n    const handleDelete = e => {\r\n    setInput({\r\n        ...input,\r\n        diets: input.diets.filter(diet => diet !== e) // filtro las que son diferentes a lo que quiero eliminar\r\n    })\r\n    }\r\n\r\n/* Manejo de las instructions */\r\n    const [inputInst, setInputInst] = useState([]) // estado inicial de cada instrucción\r\n\r\n    const handleInstChange = (e, index) => {\r\n        const instruction = [...inputInst]\r\n    \r\n        instruction[index][\"step\"] = e.target.value\r\n        instruction[index][\"number\"] = index + 1\r\n        setInputInst(instruction)\r\n        setInput({\r\n            ...input,\r\n            instructions: instruction\r\n        })\r\n        setError(validate({\r\n            ...input,\r\n            instructions: inputInst\r\n        }))\r\n}\r\n\r\n    // Agregar un input para instrucción\r\n    const handleAddInst = () => {\r\n        const instruction = [...inputInst]\r\n        instruction.push({\r\n                number: '',\r\n                step: ''\r\n            })\r\n        setInputInst(instruction)\r\n    }\r\n\r\n    // Elimina el último input de instrucción\r\n    const handleRemoveInst = () => {\r\n        const instruction = [...inputInst]\r\n        instruction.pop()\r\n        setInputInst(instruction)\r\n    }\r\n\r\n    \r\nreturn(\r\n        <div>\r\n        <NavBar />\r\n                     \r\n             <div className='create-body'>\r\n             <div className='arrow-btn'><Link to='/home'><button className='return-btn'><span className=\"material-symbols-outlined\">keyboard_backspace</span></button></Link></div>\r\n             <div><h2>Submit a new recipe</h2></div>\r\n            <div className='form-body'>\r\n\r\n{/* Formulario */}\r\n    <form id='create' onSubmit={handleRecipeSubmit}>\r\n        \r\n{/* TITLE */}\r\n        <div className='data-container'>\r\n            <div><label className='noselect'>Title <span className='asterisk'>*</span> </label></div>\r\n            <div><input\r\n                        type='text'\r\n                        value={input.title}\r\n                        name='title'\r\n                        placeholder=\"Write a catchy title\"\r\n                        onChange={handleInputChange}\r\n                        maxLength=\"60\"\r\n                        className={(input.title.length > 0 && error.title && 'title-input inputs-w') || 'inputs title-input'} \r\n            /></div>\r\n            {input.title.length > 0 && error.title && (<p className='warning-text'>{error.title}</p>)}\r\n        </div>\r\n\r\n{/* SUMMARY */}\r\n        <div className='data-container'>\r\n        <div><label className='noselect'>Summary <span className='asterisk'>*</span></label></div>\r\n        <div> <textarea\r\n                        type='text'\r\n                        value={input.summary}\r\n                        name='summary'\r\n                        placeholder='Write a brief paragraph describing your recipe'\r\n                        maxlength=\"1500\"\r\n                        onChange={handleInputChange}\r\n                        className={input.summary.length > 0 && error.summary ? 'summary-input inputs-w' : 'summary-input inputs'}\r\n            /></div>\r\n\r\n            <div>{input.summary.length > 0 && error.summary && (<p className='warning-text'>{error.summary}</p>)}</div>\r\n        </div>\r\n\r\n{/* DIETS */}\r\n        <div className='data-container'>\r\n            \r\n                <div><label><span className='noselect'>Diets</span>  </label>\r\n                <select className='diet-drop' onChange={handleDietSelect}>\r\n                    <option selected=\"true\" disabled=\"disabled\" value=\"select\">(select up to five)</option>\r\n                        {allDiets?.map((d, index) => {\r\n                            return <option key={index} value={d.name} disabled={input.diets.length >= 5 ? true : false}>{d.name}</option>                          \r\n                        })}  \r\n                </select>\r\n        \r\n        {/* Botón para eliminar dietas */}\r\n            {input.diets.map((d, index) => \r\n                <div>\r\n                    <ul><li key={index}>{d} <button className='delete-diet' type=\"button\" onClick={() => handleDelete(d)}>  X</button></li></ul>    \r\n                </div>)}\r\n         </div>         \r\n        </div>\r\n        \r\n{/* DISH TYPES */}\r\n        <div className='data-container'>\r\n            <div><label className='noselect'>Courses (select up to three)</label></div>\r\n                {dishesArray.map((dish, i) => {\r\n                    return <div className='dish-label noselect'>\r\n                        <label>\r\n                            <input \r\n                                className='dish-select'\r\n                                type='checkbox'\r\n                                id='dishCheck'\r\n                                key={i}\r\n                                value={dish}\r\n                                name={dish}\r\n                                onChange={handleCheckBox}\r\n                                disabled={!isChecked[dish] && checkCount > 2 }\r\n                                onClick={()=> setIsChecked({...isChecked, [dish]: !isChecked[dish]})}\r\n                                />\r\n                            <div className='dish-label'>  {dish}</div>\r\n                        </label>\r\n                    </div>\r\n                })}\r\n        </div>\r\n        \r\n{/* HEALTH SCORE */} {/* READY IN MINUTES */}\r\n        <div className='data-container'>\r\n            <div className='numbers'>\r\n            <div>\r\n        <div><label className='noselect'>Health Score</label></div>\r\n            <div><input\r\n                        type='number'\r\n                        value={input.healthScore}\r\n                        name='healthScore'\r\n                        placeholder='0'\r\n                        min=\"0\" max=\"100\"\r\n                        onChange={handleNumberInput}\r\n                        className={error.healthScore ? 'number-range-w' : 'number-range'}\r\n            /></div>\r\n            </div>\r\n            <div>\r\n            <label className='noselect'>Cooking time (mins.)</label>\r\n                    <div>\r\n                    <input\r\n                        type='number'\r\n                        value={input.readyInMinutes}\r\n                        name='readyInMinutes'\r\n                        min=\"0\" max=\"240\"\r\n                        onChange={handleNumberInput}\r\n                        className={error.readyInMinutes ? 'number-range-w' : 'number-range'}\r\n                    />\r\n                    </div>\r\n           </div>\r\n           </div>   \r\n<div>{error.healthScore && (<p className='warning-text'>{error.healthScore}</p>)}</div>\r\n<div>{error.readyInMinutes && (<p className='warning-text'>{error.readyInMinutes}</p>)}</div>\r\n      </div>\r\n                \r\n{/* INSTRUCTIONS */}                 \r\n        <div className='data-container'>\r\n            <div> \r\n                <label className='noselect'>Instructions (add up to 6 instructions)</label> \r\n                {/* botones + y - */}\r\n                <button className='inst-btn' type=\"button\" disabled={(error.instructions || inputInst.length > 5) && 'disabled'} onClick={handleAddInst}> + </button>\r\n                <button className='inst-btn' type=\"button\" disabled={(error.instructions || inputInst.length === 0) && 'disabled'} onClick={handleRemoveInst}> - </button>\r\n                <div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        inputInst.map((instruction, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <ul>\r\n                                        <li key={i}>{i+1}. <textarea\r\n                                            type='text'\r\n                                            maxlength=\"150\"\r\n                                            name=\"step\"\r\n                                            value={instruction.step}\r\n                                            placeholder='Write each instruction'\r\n                                            onChange={e => handleInstChange(e, i)}\r\n                                            className={(input.instructions.length > 0 && error.instructions && 'instructions-input inputs-w') || 'inputs instructions-input'}\r\n                                        />\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            ) \r\n                        }) \r\n                    }\r\n                </div>\r\n                <div>{error.instructions?.length > 0 && (<p className='warning-text'>{error.instructions}</p>)}</div> \r\n            </div>\r\n        </div>\r\n                \r\n{/* IMAGE */}            \r\n        <div className='data-container'>\r\n            <div><label className='noselect'>Image</label></div>\r\n               <div> <input\r\n                    type='url'\r\n                    value={input.image}\r\n                    name='image'\r\n                    placeholder='Write the link to your image'\r\n                    maxlength=\"2048\"\r\n                    onChange={handleInputChange}\r\n                    className={(input.image.length > 0 && error.image && 'title-input inputs-w') || 'inputs title-input'}\r\n                />\r\n            </div>\r\n            <div>{input.image.length > 0 && error.image && (<p className='warning-text'>{error.image}</p>)}</div>\r\n        </div>            \r\n</form>\r\n\r\n            {console.log(error)}\r\n    \r\n    {/* Botón CREATE */}\r\n    <button className='create-btn' type='submit' form='create' disabled={!input.title || !input.summary || Object.values(error)?.length}>Create recipe</button>\r\n    \r\n    {(!input.title || !input.summary) && (<div className='warning-text'>* Please fill in all required fields</div>)}\r\n\r\n    </div> \r\n    </div>   \r\n    </div>)\r\n}\r\n\r\nexport default Create;","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./error404.css\";\r\n\r\n\r\nconst Error404 = () => {\r\n    return(\r\n        <div className='home-body error404'>\r\n            <h1 className='not-found'>Page Not Found :/</h1>\r\n            <Link to=\"/home\"><button className='error-btn'>Go back</button></Link>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404;\r\n","import { React, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDetail, resetDetail } from '../../actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Error404 from '../Error404/Error404';\r\nimport Loader from '../Loader/Loader';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport './detailCard.css';\r\n\r\n\r\nconst DetailCard = (props) => {\r\n    const dispatch = useDispatch();\r\n    const {id} = props.match.params;\r\n    useEffect(() => {\r\n        dispatch(getDetail(id))\r\n        return () => dispatch(resetDetail()); // Así evito que quede cargada la anterior\r\n    }, [dispatch, id])\r\n\r\n    const selectedRecipe = useSelector(state => state.detail); // traigo el objeto detail que se crea con el dispatch de getDetail\r\n   \r\n    /* Transformor los arrays de diets y dishtypes a strings */\r\n    const dietString = selectedRecipe.diets?.join(', ');\r\n    const dishes = selectedRecipe.dishTypes?.join(', ');\r\n\r\n    /* Seteo imágenes por default según algunos dishtypes */\r\n    // Si por alguna razón la imagen llega null o con un length inválido:\r\n    if(typeof selectedRecipe.image === 'object' || selectedRecipe.image?.length < 7) {\r\n        // ['main course', 'breakfast', 'brunch','lunch', 'dinner', 'snack']\r\n        if(selectedRecipe.dishTypes?.includes('dessert')) selectedRecipe.image = \"https://i.postimg.cc/Pq2Y7JKK/place-Holder-dessert.jpg\";\r\n        else if(selectedRecipe.dishTypes?.includes('side dish')) selectedRecipe.image = \"https://i.postimg.cc/MTHVJwFw/place-Holder-side-Dish.jpg\";\r\n        else if (selectedRecipe.dishTypes?.includes('snack')) selectedRecipe.image = \"https://i.postimg.cc/nzW7HWyD/place-Holder-snack.jpg\";\r\n        else selectedRecipe.image = 'https://i.postimg.cc/3W5vGvJr/place-Holder-Image.jpg';\r\n    }\r\n\r\n// Si el reducer mandó un string significa que la receta a la que se quiere acceder por params no existe\r\nif(typeof selectedRecipe === 'string') {return(\r\n    <div>\r\n        <div><NavBar/></div>\r\n        <Error404/>\r\n    </div> \r\n)} else return (\r\n    <div>\r\n    <NavBar/>\r\n          \r\n\r\n{  (Object.keys(selectedRecipe).length === 0) ? (<div className='home-body'><Loader/></div>) \r\n             : <div className='detail-page-body'>\r\n             <div className='detail-body'>\r\n                <div className='detail-container'>\r\n                <div className='main-detail-info'>\r\n                <div className='info-container'>\r\n\r\n{/* Información principal del detail */}\r\n        <div><img className='detail-image' src={selectedRecipe.image} alt='dish'/></div>\r\n        \r\n        <div className='info-block'>\r\n        <div className='arrow'><Link to='/home'><button className='return-btn'><span className=\"material-symbols-outlined\">keyboard_backspace</span></button></Link></div>\r\n        \r\n        <div className='detail-title'><h1>{selectedRecipe.title}</h1></div>\r\n            <div className='detail-numeric-info'>\r\n            { selectedRecipe.readyInMinutes && selectedRecipe.readyInMinutes !== 0 ? <h6><span className=\"health-minutes material-symbols-outlined\">timer</span> Cooking time: {selectedRecipe.readyInMinutes} minutes</h6> : ''}\r\n            { selectedRecipe.healthScore && selectedRecipe.healthScore !== 0 ? <h6><span className=\"health-minutes heart material-symbols-outlined\">favorite</span>  This recipe has {selectedRecipe.healthScore} health points</h6> : ''}\r\n            </div>\r\n\r\n            <div className='diet-dish'> \r\n              { dietString ? <h6 className='diet-dish'><span>Diets:</span> {dietString}</h6> : <h6 className='diet-dish'>This recipe might be incompatible with some dietary restrictions</h6>}\r\n              { dishes ? <h6 className='diet-dish'><span>Best for:</span> {dishes}</h6> : <h6 className='diet-dish'>Great for all courses</h6> }              \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n{/* Tabs de summary e instructions   */}\r\n    <div>\r\n    <input className='tab' type='radio' name='tab' id='tab1'/>\r\n    <label for='tab1' className='detail-tab'>Summary</label>\r\n    <input className='tab' type='radio' name='tab' id='tab2'/>\r\n    <label for='tab2' className='detail-tab'>Instructions</label>\r\n\r\n    <div className='tab-body'>\r\n      <div className='tab-detail'>\r\n            <p className='detail-summary' dangerouslySetInnerHTML={{__html: selectedRecipe.summary}}/>\r\n        </div>\r\n    <div className='tab-detail'>\r\n            {\r\n                    selectedRecipe.instructions?.length ? (\r\n                        selectedRecipe.instructions?.map(i => {\r\n                            return(\r\n                                <div>\r\n                                    <ul className='detail-inst'>\r\n                                        <li className='detail-step' key={i}>{i.number}. {i.step}</li>\r\n                                    </ul>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <h4>It seems this recipe has no instructions. Feel free to improvise</h4>\r\n                    )\r\n                } \r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div> \r\n        </div>} \r\n        </div>   \r\n    )\r\n}\r\n\r\n\r\nexport default DetailCard;","import './App.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport Landing from './components/Landing/Landing';\r\nimport Home from './components/Home/Home';\r\nimport Create from './components/Create/Create';\r\nimport DetailCard from './components/DetailCard/DetailCard';\r\nimport Error404 from './components/Error404/Error404';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename='/recipes-app'>\r\n      <Switch>\r\n        <Route exact path='/' component={Landing}/>\r\n        <Route exact path='/home' component={Home}/>\r\n        <Route path='/home/:id' component={DetailCard}/>\r\n        <Route path='/create' component={Create}/>\r\n        <Route path='*' component={Error404}/>\r\n\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { GET_RECIPES, FILTER_DIET, SORT_RECIPES, GET_DIETS, SEARCH, GET_DETAIL, CREATE_RECIPE, RESET_DETAIL, RESET } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    allRecipes: [], // para tener siempre una copia de todas\r\n    allDiets: [],\r\n    detail: {},\r\n}\r\n\r\nfunction rootReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_RECIPES:\r\n            return {\r\n                ...state,\r\n                recipes: action.payload,\r\n                allRecipes: action.payload,\r\n            }\r\n\r\n        case GET_DIETS:\r\n            return{\r\n                ...state,\r\n                allDiets: action.payload\r\n            }\r\n\r\n        case SEARCH:\r\n            return{\r\n                ...state,\r\n                recipes: action.payload\r\n              }\r\n        \r\n        case SORT_RECIPES:  \r\n            let sorter;\r\n            switch(action.payload){\r\n                    case 'A-Z':\r\n                        sorter = (a, b) => {\r\n                            if(a.title.toLowerCase() < b.title.toLowerCase()) return -1;\r\n                            if(a.title.toLowerCase() > b.title.toLowerCase()) return 1;\r\n                            else return 0;\r\n                        }\r\n                            break;\r\n                    case 'Z-A':\r\n                        sorter = (a, b) =>{\r\n                            if(a.title.toLowerCase() < b.title.toLowerCase()) return 1;\r\n                            if(a.title.toLowerCase() > b.title.toLowerCase()) return -1;\r\n                            else return 0;\r\n                        }\r\n                            break;\r\n                    case '+H':\r\n                        sorter = (a, b)=>{\r\n                            if(a.healthScore < b.healthScore) return 1;\r\n                            if(a.healthScore > b.healthScore) return -1;\r\n                            else return 0;\r\n                        }\r\n                            break;\r\n                    case '-H':\r\n                        sorter = (a, b)=>{\r\n                            if(a.healthScore < b.healthScore) return -1;\r\n                            if(a.healthScore > b.healthScore) return 1;\r\n                            else return 0;\r\n                        }\r\n                            break;\r\n                                                                      \r\n                    default:\r\n                            break;\r\n                    }\r\n\r\n                return{\r\n                    ...state,\r\n                    recipes: state.recipes.sort(sorter)\r\n                }\r\n         \r\n        case FILTER_DIET:\r\n            const filteredByDiet = action.payload;\r\n                    \r\n            // Muestra todas\r\n                if(filteredByDiet === 'nofilter'){\r\n                    return{\r\n                        ...state,\r\n                        recipes: state.allRecipes,\r\n                    } \r\n                 \r\n                    // Quiero que tome la propiedad 'vegetarian' que traigo de la API (da un booleano)\r\n                    // y que además filtre lo que viene de la db con esta dieta\r\n                } else if (filteredByDiet === 'vegetarian'){\r\n                    let filtered = state.allRecipes?.filter(recipe => {\r\n                        return recipe.vegetarian || recipe.diets?.includes('vegetarian')\r\n                    })  \r\n                    if(filtered.length){\r\n                        return{\r\n                            ...state,\r\n                            recipes: filtered,\r\n                        }\r\n                    } else{\r\n                        return{\r\n                            ...state,\r\n                            recipes: ''\r\n                        }\r\n                    }\r\n                } \r\n                \r\n                // Filtra por tipo de dieta en todos los demás casos\r\n                else {\r\n                    let filtered = state.allRecipes?.filter(recipe =>{\r\n                        return recipe.diets?.includes(filteredByDiet) \r\n                    })\r\n                \r\n                // Para chequear que haya encontrado algo\r\n                    if(filtered.length){\r\n                        return{\r\n                            ...state,\r\n                            recipes: filtered,\r\n                        }\r\n                    } else{ // si no encuentra, retorna un string vacío que lo agarra la condición antes del return en el componente\r\n                        return{\r\n                            ...state,\r\n                            recipes: ''\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n     \r\n        case GET_DETAIL:\r\n            return{\r\n                ...state,\r\n                detail: action.payload\r\n            }\r\n        \r\n        case RESET_DETAIL:\r\n            return{\r\n                ...state,\r\n                detail: {}\r\n            }\r\n\r\n        case CREATE_RECIPE:\r\n            return{\r\n                ...state,\r\n            }\r\n        case RESET:\r\n            return{\r\n                ...state,\r\n                recipes: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducer\";\r\n\r\nconst composeEnhancers =\r\n   (typeof window !== 'undefined' &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n   compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'; \r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\"\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}